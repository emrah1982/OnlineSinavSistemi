// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineSinavDAL.Concrete;

namespace OnlineSinavDAL.Migrations
{
    [DbContext(typeof(OnlineSinavContext))]
    partial class OnlineSinavContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineSinavModel.Brans", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LogoUrl");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<int?>("UstBransId");

                    b.HasKey("ID");

                    b.HasIndex("UstBransId");

                    b.ToTable("Brans");
                });

            modelBuilder.Entity("OnlineSinavModel.Ders", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Baslik");

                    b.Property<string>("DokumanUrl");

                    b.Property<string>("Icerik");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KursId");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("VideoUrl");

                    b.HasKey("ID");

                    b.ToTable("Ders");
                });

            modelBuilder.Entity("OnlineSinavModel.ExceptionMessage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HataMesaji");

                    b.Property<string>("HataMethodu");

                    b.Property<string>("HataSatiri");

                    b.Property<string>("HataUrl");

                    b.Property<string>("HataYeri");

                    b.Property<DateTime>("HataZamani");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KullaniciId");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciId");

                    b.ToTable("ExceptionMessage");
                });

            modelBuilder.Entity("OnlineSinavModel.Kullanici", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("ActivationCode");

                    b.Property<string>("Ad")
                        .HasMaxLength(50);

                    b.Property<DateTime>("DogumTarihi");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FotoUrl");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEmailActive");

                    b.Property<DateTime>("KayitTarihi");

                    b.Property<string>("ResetPasswordCode")
                        .HasMaxLength(100);

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Soyad")
                        .HasMaxLength(50);

                    b.Property<string>("TcNo")
                        .HasMaxLength(11);

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciCevap", b =>
                {
                    b.Property<int>("KullaniciSinavID");

                    b.Property<int>("SoruID");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("KullaniciSinavID", "SoruID");

                    b.HasIndex("SoruID");

                    b.ToTable("KullaniciCevap");
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciDetay", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KullaniciID");

                    b.Property<int>("Mezuniyet");

                    b.Property<string>("Telefon");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.HasIndex("KullaniciID")
                        .IsUnique();

                    b.ToTable("KullaniciDetays");
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciKurs", b =>
                {
                    b.Property<int>("KullaniciId");

                    b.Property<int>("KursId");

                    b.Property<bool>("Durum");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KullaniciID");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("KullaniciId", "KursId");

                    b.HasIndex("KursId");

                    b.ToTable("KullaniciKurs");
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciRol", b =>
                {
                    b.Property<int>("KullaniciId");

                    b.Property<int>("RolId");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("KullaniciId", "RolId");

                    b.HasIndex("RolId");

                    b.ToTable("KullaniciRols");
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciSinav", b =>
                {
                    b.Property<int>("KullaniciId");

                    b.Property<int>("SinavId");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("SinavBittiMi");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("KullaniciId", "SinavId");

                    b.HasIndex("SinavId");

                    b.ToTable("KullaniciSinav");
                });

            modelBuilder.Entity("OnlineSinavModel.Kurs", b =>
                {
                    b.Property<int>("ID");

                    b.Property<DateTime>("BaslamaTarihi");

                    b.Property<DateTime>("BitisTarihi");

                    b.Property<bool>("BitttiMi");

                    b.Property<int>("HaftalikCalisma");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("SinavId");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.HasIndex("SinavId")
                        .IsUnique();

                    b.ToTable("Kurs");
                });

            modelBuilder.Entity("OnlineSinavModel.KursDers", b =>
                {
                    b.Property<int>("KullaniciId");

                    b.Property<int>("DersId");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("KayitTarihi");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("KullaniciId", "DersId");

                    b.HasIndex("DersId");

                    b.HasIndex("ID");

                    b.ToTable("KursDers");
                });

            modelBuilder.Entity("OnlineSinavModel.KursMerkezi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<string>("Adres");

                    b.Property<int>("Il");

                    b.Property<int>("Ilce");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LocationUrl");

                    b.Property<string>("TelefonNumarasi");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.ToTable("KursMerkezi");
                });

            modelBuilder.Entity("OnlineSinavModel.Rol", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("OnlineSinavModel.Sikayet", b =>
                {
                    b.Property<int>("DersId");

                    b.Property<int>("KullaniciId");

                    b.Property<string>("Aciklama");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("DersId", "KullaniciId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Sikayet");
                });

            modelBuilder.Entity("OnlineSinavModel.Sinav", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BransId");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KaydedenKullaniciId");

                    b.Property<byte>("Kontejan");

                    b.Property<int>("KursMerkeziId");

                    b.Property<int>("OgretmenId");

                    b.Property<bool>("OturumBittiMi");

                    b.Property<int>("SinavSaati");

                    b.Property<DateTime>("SinavTarihi");

                    b.Property<string>("Sinif");

                    b.Property<byte>("SoruSayisi");

                    b.Property<int>("Suresi");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("ID");

                    b.HasIndex("BransId");

                    b.HasIndex("KaydedenKullaniciId");

                    b.HasIndex("KursMerkeziId");

                    b.HasIndex("OgretmenId");

                    b.ToTable("Sinav");
                });

            modelBuilder.Entity("OnlineSinavModel.SinavSoru", b =>
                {
                    b.Property<int>("SinavID");

                    b.Property<int>("SoruID");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("SinavID", "SoruID");

                    b.HasIndex("SoruID");

                    b.ToTable("SinavSoru");
                });

            modelBuilder.Entity("OnlineSinavModel.Soru", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama");

                    b.Property<int>("BransID");

                    b.Property<string>("Cevap");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("KullaniciID");

                    b.Property<bool>("OnaylandiMi");

                    b.Property<string>("SoruMetni");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<byte>("ZorlukDerecesi");

                    b.HasKey("ID");

                    b.HasIndex("BransID");

                    b.HasIndex("KullaniciID");

                    b.ToTable("Soru");
                });

            modelBuilder.Entity("OnlineSinavModel.Yorum", b =>
                {
                    b.Property<int>("KullaniciId");

                    b.Property<int>("DersId");

                    b.Property<string>("Aciklama");

                    b.Property<int>("ID");

                    b.Property<DateTime>("InsertDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("UpdateDate");

                    b.HasKey("KullaniciId", "DersId");

                    b.HasIndex("DersId");

                    b.ToTable("Yorum");
                });

            modelBuilder.Entity("OnlineSinavModel.Brans", b =>
                {
                    b.HasOne("OnlineSinavModel.Brans", "UstBransi")
                        .WithMany()
                        .HasForeignKey("UstBransId");
                });

            modelBuilder.Entity("OnlineSinavModel.ExceptionMessage", b =>
                {
                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("ExceptionMessage")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciCevap", b =>
                {
                    b.HasOne("OnlineSinavModel.Sinav", "Sinav")
                        .WithMany("KullaniciCevap")
                        .HasForeignKey("KullaniciSinavID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Soru", "Soru")
                        .WithMany("KullaniciCevap")
                        .HasForeignKey("SoruID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciDetay", b =>
                {
                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithOne("KullaniciDetaylari")
                        .HasForeignKey("OnlineSinavModel.KullaniciDetay", "KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciKurs", b =>
                {
                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("KullaniciKurs")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kurs", "Kurs")
                        .WithMany("KullaniciKurs")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciRol", b =>
                {
                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("KullaniciRoller")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Rol", "Rol")
                        .WithMany("KullaniciRoller")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.KullaniciSinav", b =>
                {
                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("KullaniciSinav")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Sinav", "Sinav")
                        .WithMany("KullaniciSinav")
                        .HasForeignKey("SinavId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.Kurs", b =>
                {
                    b.HasOne("OnlineSinavModel.Ders", "Ders")
                        .WithOne("Kurs")
                        .HasForeignKey("OnlineSinavModel.Kurs", "ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Sinav", "Sinav")
                        .WithOne("Kurs")
                        .HasForeignKey("OnlineSinavModel.Kurs", "SinavId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.KursDers", b =>
                {
                    b.HasOne("OnlineSinavModel.Ders", "Ders")
                        .WithMany("KursDers")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kurs")
                        .WithMany("KursDers")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("KursDers")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.Sikayet", b =>
                {
                    b.HasOne("OnlineSinavModel.Ders", "Ders")
                        .WithMany("Sikayetler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("Sikayetler")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.Sinav", b =>
                {
                    b.HasOne("OnlineSinavModel.Brans", "Brans")
                        .WithMany()
                        .HasForeignKey("BransId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kullanici", "KaydedenKullanici")
                        .WithMany("SinavKaydedenKullanici")
                        .HasForeignKey("KaydedenKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OnlineSinavModel.KursMerkezi", "KursMerkezi")
                        .WithMany()
                        .HasForeignKey("KursMerkeziId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kullanici", "Ogretmen")
                        .WithMany("SinavOgretmen")
                        .HasForeignKey("OgretmenId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("OnlineSinavModel.SinavSoru", b =>
                {
                    b.HasOne("OnlineSinavModel.Sinav", "Sinav")
                        .WithMany("SinavSoru")
                        .HasForeignKey("SinavID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Soru", "Soru")
                        .WithMany("SinavSoru")
                        .HasForeignKey("SoruID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.Soru", b =>
                {
                    b.HasOne("OnlineSinavModel.Brans", "Brans")
                        .WithMany()
                        .HasForeignKey("BransID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OnlineSinavModel.Yorum", b =>
                {
                    b.HasOne("OnlineSinavModel.Ders", "Ders")
                        .WithMany("Yorumlar")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OnlineSinavModel.Kullanici", "Kullanici")
                        .WithMany("Yorumlar")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
